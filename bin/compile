#!/bin/sh

##
# usage: bin/compile <build-dir> <cache-dir>

indent() {
  sed -u 's/^/       /'
}

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit

DEFAULT_OTP_VERSION="master"
if [ -f ${build}/.preferred_otp_version ]; then
  OTP_VERSION=$(cat ${build}/.preferred_otp_version)
fi
erl_ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
erl_tarball=${erl_ver}.tgz
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-erlang/${erl_tarball}"
ERLROOT=${build}/otp

DEFAULT_ELIXIR_VERSION="master"
if [ -f ${build}/.preferred_elixir_version ]; then
  ELIXIR_VERSION=$(cat ${build}/.preferred_elixir_version)
fi
ex_ver=${ELIXIR_VERSION:=${DEFAULT_ELIXIR_VERSION}}
ex_tarball=${ex_ver}.tar
ELIXIR_TARBALL_URL="https://github.com/elixir-lang/elixir/tarball/${ex_ver}"
EXROOT=${build}/ex

echo "-----> Using Erlang/OTP $erl_ver"

(
  set -e

  # Already cached?
  test -f ${cache}/${erl_tarball} && exit

  rm -rf ${cache}/* # be sure not to build up cruft
  cd ${cache}
  echo "-------> Fetching Erlang/OTP $erl_ver"
  curl -sO ${OTP_TARBALL_URL} || exit 1
)

echo "-------> Unpacking Erlang/OTP $erl_ver"
mkdir -p ${ERLROOT}
tar zxf ${cache}/${erl_tarball} -C ${ERLROOT} --strip-components=2
echo "-------> Installing Erlang/OTP $erl_ver"
ln -s ${ERLROOT} /app/otp
${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH

if [ ! -e "rebar" ]; then
  echo "-----> Installing Rebar from buildpack"
  cp ${bpdir}/opt/rebar $build
  PATH=${bpdir}/opt:$PATH
fi

echo "-----> Using Elixir $ex_ver"

(
  set -e

  # Already cached?
  test -f ${cache}/${ex_tarball} && exit

  rm -rf ${cache}/* # be sure not to build up cruft
  cd ${cache}
  echo "-------> Fetching Elixir $ex_ver"
  curl -LsO ${ELIXIR_TARBALL_URL} -o $ex_tarball || exit 1
  mv $ex_ver $ex_tarball
)

echo "-------> Unpacking Elixir $ex_ver"
mkdir -p ${EXROOT}
tar xf ${cache}/${ex_tarball} -C ${EXROOT} --strip-components=1
echo "-------> Installing Elixir $ex_ver"

(
  set -e

  cd ${EXROOT}
  make > /dev/null
)

ln -s ${EXROOT} /app/ex

PATH=/app/ex/bin:$PATH

cd $build

echo "-----> Building with Mix"
unset GIT_DIR

echo "-----> Bundling dependencies"
mix deps.get 2>&1 | indent

echo "-----> Compiling app"
MIX_ENV=prod mix compile 2>&1 | indent
